package oracle.summit.model.entities;

import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;

import oracle.summit.base.SummitEntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue May 29 14:15:50 CDT 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CustomerEOImpl extends SummitEntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Id {
            public Object get(CustomerEOImpl obj) {
                return obj.getId();
            }

            public void put(CustomerEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Name {
            public Object get(CustomerEOImpl obj) {
                return obj.getName();
            }

            public void put(CustomerEOImpl obj, Object value) {
                obj.setName((String) value);
            }
        }
        ,
        Phone {
            public Object get(CustomerEOImpl obj) {
                return obj.getPhone();
            }

            public void put(CustomerEOImpl obj, Object value) {
                obj.setPhone((String) value);
            }
        }
        ,
        Address {
            public Object get(CustomerEOImpl obj) {
                return obj.getAddress();
            }

            public void put(CustomerEOImpl obj, Object value) {
                obj.setAddress((String) value);
            }
        }
        ,
        City {
            public Object get(CustomerEOImpl obj) {
                return obj.getCity();
            }

            public void put(CustomerEOImpl obj, Object value) {
                obj.setCity((String) value);
            }
        }
        ,
        State {
            public Object get(CustomerEOImpl obj) {
                return obj.getState();
            }

            public void put(CustomerEOImpl obj, Object value) {
                obj.setState((String) value);
            }
        }
        ,
        CountryId {
            public Object get(CustomerEOImpl obj) {
                return obj.getCountryId();
            }

            public void put(CustomerEOImpl obj, Object value) {
                obj.setCountryId((Integer) value);
            }
        }
        ,
        ZipCode {
            public Object get(CustomerEOImpl obj) {
                return obj.getZipCode();
            }

            public void put(CustomerEOImpl obj, Object value) {
                obj.setZipCode((String) value);
            }
        }
        ,
        CreditRatingId {
            public Object get(CustomerEOImpl obj) {
                return obj.getCreditRatingId();
            }

            public void put(CustomerEOImpl obj, Object value) {
                obj.setCreditRatingId((Integer) value);
            }
        }
        ,
        SalesRepId {
            public Object get(CustomerEOImpl obj) {
                return obj.getSalesRepId();
            }

            public void put(CustomerEOImpl obj, Object value) {
                obj.setSalesRepId((Number) value);
            }
        }
        ,
        Comments {
            public Object get(CustomerEOImpl obj) {
                return obj.getComments();
            }

            public void put(CustomerEOImpl obj, Object value) {
                obj.setComments((String) value);
            }
        }
        ,
        EmpEO {
            public Object get(CustomerEOImpl obj) {
                return obj.getEmpEO();
            }

            public void put(CustomerEOImpl obj, Object value) {
                obj.setEmpEO((SummitEntityImpl) value);
            }
        }
        ,
        OrdEO {
            public Object get(CustomerEOImpl obj) {
                return obj.getOrdEO();
            }

            public void put(CustomerEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CreditRatingEO {
            public Object get(CustomerEOImpl obj) {
                return obj.getCreditRatingEO();
            }

            public void put(CustomerEOImpl obj, Object value) {
                obj.setCreditRatingEO((SummitEntityImpl) value);
            }
        }
        ,
        CountryEO {
            public Object get(CustomerEOImpl obj) {
                return obj.getCountryEO();
            }

            public void put(CustomerEOImpl obj, Object value) {
                obj.setCountryEO((SummitEntityImpl) value);
            }
        }
        ,
        PaymentOptionEO {
            public Object get(CustomerEOImpl obj) {
                return obj.getPaymentOptionEO();
            }

            public void put(CustomerEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(CustomerEOImpl object);

        public abstract void put(CustomerEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int NAME = AttributesEnum.Name.index();
    public static final int PHONE = AttributesEnum.Phone.index();
    public static final int ADDRESS = AttributesEnum.Address.index();
    public static final int CITY = AttributesEnum.City.index();
    public static final int STATE = AttributesEnum.State.index();
    public static final int COUNTRYID = AttributesEnum.CountryId.index();
    public static final int ZIPCODE = AttributesEnum.ZipCode.index();
    public static final int CREDITRATINGID = AttributesEnum.CreditRatingId.index();
    public static final int SALESREPID = AttributesEnum.SalesRepId.index();
    public static final int COMMENTS = AttributesEnum.Comments.index();
    public static final int EMPEO = AttributesEnum.EmpEO.index();
    public static final int ORDEO = AttributesEnum.OrdEO.index();
    public static final int CREDITRATINGEO = AttributesEnum.CreditRatingEO.index();
    public static final int COUNTRYEO = AttributesEnum.CountryEO.index();
    public static final int PAYMENTOPTIONEO = AttributesEnum.PaymentOptionEO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CustomerEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("oracle.summit.model.entities.CustomerEO");
    }


    /**
     * Gets the attribute value for Id, using the alias name Id.
     * @return the value of Id
     */
    public DBSequence getId() {
        return (DBSequence) getAttributeInternal(ID);
    }

    /**
     * Gets the attribute value for Name, using the alias name Name.
     * @return the value of Name
     */
    public String getName() {
        return (String)getAttributeInternal(NAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for Name.
     * @param value value to set the Name
     */
    public void setName(String value) {
        setAttributeInternal(NAME, value);
    }

    /**
     * Gets the attribute value for Phone, using the alias name Phone.
     * @return the value of Phone
     */
    public String getPhone() {
        return (String)getAttributeInternal(PHONE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Phone.
     * @param value value to set the Phone
     */
    public void setPhone(String value) {
        setAttributeInternal(PHONE, value);
    }

    /**
     * Gets the attribute value for Address, using the alias name Address.
     * @return the value of Address
     */
    public String getAddress() {
        return (String)getAttributeInternal(ADDRESS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Address.
     * @param value value to set the Address
     */
    public void setAddress(String value) {
        setAttributeInternal(ADDRESS, value);
    }

    /**
     * Gets the attribute value for City, using the alias name City.
     * @return the value of City
     */
    public String getCity() {
        return (String)getAttributeInternal(CITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for City.
     * @param value value to set the City
     */
    public void setCity(String value) {
        setAttributeInternal(CITY, value);
    }

    /**
     * Gets the attribute value for State, using the alias name State.
     * @return the value of State
     */
    public String getState() {
        return (String)getAttributeInternal(STATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for State.
     * @param value value to set the State
     */
    public void setState(String value) {
        setAttributeInternal(STATE, value);
    }

    /**
     * Gets the attribute value for CountryId, using the alias name CountryId.
     * @return the value of CountryId
     */
    public Integer getCountryId() {
        return (Integer)getAttributeInternal(COUNTRYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CountryId.
     * @param value value to set the CountryId
     */
    public void setCountryId(Integer value) {
        setAttributeInternal(COUNTRYID, value);
    }

    /**
     * Gets the attribute value for ZipCode, using the alias name ZipCode.
     * @return the value of ZipCode
     */
    public String getZipCode() {
        return (String)getAttributeInternal(ZIPCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ZipCode.
     * @param value value to set the ZipCode
     */
    public void setZipCode(String value) {
        setAttributeInternal(ZIPCODE, value);
    }

    /**
     * Gets the attribute value for CreditRatingId, using the alias name CreditRatingId.
     * @return the value of CreditRatingId
     */
    public Integer getCreditRatingId() {
        return (Integer)getAttributeInternal(CREDITRATINGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreditRatingId.
     * @param value value to set the CreditRatingId
     */
    public void setCreditRatingId(Integer value) {
        setAttributeInternal(CREDITRATINGID, value);
    }

    /**
     * Gets the attribute value for SalesRepId, using the alias name SalesRepId.
     * @return the value of SalesRepId
     */
    public Number getSalesRepId() {
        return (Number)getAttributeInternal(SALESREPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SalesRepId.
     * @param value value to set the SalesRepId
     */
    public void setSalesRepId(Number value) {
        setAttributeInternal(SALESREPID, value);
    }

    /**
     * Gets the attribute value for Comments, using the alias name Comments.
     * @return the value of Comments
     */
    public String getComments() {
        return (String)getAttributeInternal(COMMENTS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Comments.
     * @param value value to set the Comments
     */
    public void setComments(String value) {
        setAttributeInternal(COMMENTS, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.summit.base.SummitEntityImpl.
     */
    public SummitEntityImpl getEmpEO() {
        return (SummitEntityImpl) getAttributeInternal(EMPEO);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.summit.base.SummitEntityImpl.
     */
    public void setEmpEO(SummitEntityImpl value) {
        setAttributeInternal(EMPEO, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getOrdEO() {
        return (RowIterator) getAttributeInternal(ORDEO);
    }

    /**
     * @return the associated entity oracle.summit.base.SummitEntityImpl.
     */
    public SummitEntityImpl getCreditRatingEO() {
        return (SummitEntityImpl) getAttributeInternal(CREDITRATINGEO);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.summit.base.SummitEntityImpl.
     */
    public void setCreditRatingEO(SummitEntityImpl value) {
        setAttributeInternal(CREDITRATINGEO, value);
    }

    /**
     * @return the associated entity oracle.summit.base.SummitEntityImpl.
     */
    public SummitEntityImpl getCountryEO() {
        return (SummitEntityImpl) getAttributeInternal(COUNTRYEO);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.summit.base.SummitEntityImpl.
     */
    public void setCountryEO(SummitEntityImpl value) {
        setAttributeInternal(COUNTRYEO, value);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getPaymentOptionEO() {
        return (RowIterator) getAttributeInternal(PAYMENTOPTIONEO);
    }


    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(DBSequence id) {
        return new Key(new Object[] { id });
    }

    private boolean isDeleteAllowed() {
        byte s = this.getEntityState();
      return s==STATUS_NEW;
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        if (isDeleteAllowed())
          super.remove();
        else
            throw new JboException("Delete not allowed in this view");
        }
}

package oracle.summit.model.views;

import java.sql.Date;

import java.util.List;

import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;

import oracle.summit.base.SummitEntityImpl;
import oracle.summit.base.SummitViewRowImpl;
import oracle.summit.model.entities.CustomerEOImpl;
import oracle.summit.model.entities.OrdEOImpl;

import oracle.jbo.Row;

// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Mar 25 11:45:11 GMT 2011
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class OrdVORowImpl extends SummitViewRowImpl {
    public static final int ENTITY_ORDEO = 0;
    public static final int ENTITY_EMPEO = 1;
    public static final int ENTITY_CUSTOMEREO = 2;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Id,
        CustomerId,
        DateOrdered,
        DateShipped,
        SalesRepId,
        Total,
        PaymentTypeId,
        OrderFilled,
        LastName,
        Id1,
        Name,
        Id2,
        TimeToShip,
        ItemVO,
        YesNoVO1,
        PaymentTypeVO1,
        SalesRepsVO;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int ID = AttributesEnum.Id.index();
    public static final int CUSTOMERID = AttributesEnum.CustomerId.index();
    public static final int DATEORDERED = AttributesEnum.DateOrdered.index();
    public static final int DATESHIPPED = AttributesEnum.DateShipped.index();
    public static final int SALESREPID = AttributesEnum.SalesRepId.index();
    public static final int TOTAL = AttributesEnum.Total.index();
    public static final int PAYMENTTYPEID = AttributesEnum.PaymentTypeId.index();
    public static final int ORDERFILLED = AttributesEnum.OrderFilled.index();
    public static final int LASTNAME = AttributesEnum.LastName.index();
    public static final int ID1 = AttributesEnum.Id1.index();
    public static final int NAME = AttributesEnum.Name.index();
    public static final int ID2 = AttributesEnum.Id2.index();
    public static final int TIMETOSHIP = AttributesEnum.TimeToShip.index();
    public static final int ITEMVO = AttributesEnum.ItemVO.index();
    public static final int YESNOVO1 = AttributesEnum.YesNoVO1.index();
    public static final int PAYMENTTYPEVO1 = AttributesEnum.PaymentTypeVO1.index();
    public static final int SALESREPSVO = AttributesEnum.SalesRepsVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public OrdVORowImpl() {
    }


    /**
     * Sample exportable method.
     */
    public void sampleOrdVORowImplExportable() {
    }

    /**
     * Sample exportable method.
     */
    public void sampleOrdVORowImplExportable2(String testParam1) {
    }

    /**
     * Sample exportable method.
     */
    public List<String> sampleOrdVORowImplExportable3(List<String> listParam,
                                                      String testParam1) {
        return listParam;
    }

    public oracle.jbo.domain.Number calculateTimeToShip(Date ordered,
                                                        Date shipped) {

        if (null != shipped) {
            long days =
                (shipped.getTime() - ordered.getTime()) / (1000 * 60 * 60 *
                                                           24);

            return new Number(days);
        } else
            return new Number(0);

    }

    @Override
    public void setNewRowState(byte b) {
        if (b==Row.STATUS_INITIALIZED) {
        b=Row.STATUS_NEW;
        }
        super.setNewRowState(b);
    }
}

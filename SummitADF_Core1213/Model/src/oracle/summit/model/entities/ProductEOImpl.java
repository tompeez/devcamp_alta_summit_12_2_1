package oracle.summit.model.entities;

import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;

import oracle.summit.base.SummitEntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Jan 28 12:22:19 GMT 2011
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ProductEOImpl extends SummitEntityImpl {

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Id {
            public Object get(ProductEOImpl obj) {
                return obj.getId();
            }

            public void put(ProductEOImpl obj, Object value) {
                obj.setId((Number) value);
            }
        }
        ,
        Name {
            public Object get(ProductEOImpl obj) {
                return obj.getName();
            }

            public void put(ProductEOImpl obj, Object value) {
                obj.setName((String)value);
            }
        }
        ,
        ShortDesc {
            public Object get(ProductEOImpl obj) {
                return obj.getShortDesc();
            }

            public void put(ProductEOImpl obj, Object value) {
                obj.setShortDesc((String)value);
            }
        }
        ,
        LongtextId {
            public Object get(ProductEOImpl obj) {
                return obj.getLongtextId();
            }

            public void put(ProductEOImpl obj, Object value) {
                obj.setLongtextId((Number) value);
            }
        }
        ,
        ImageId {
            public Object get(ProductEOImpl obj) {
                return obj.getImageId();
            }

            public void put(ProductEOImpl obj, Object value) {
                obj.setImageId((Number) value);
            }
        }
        ,
        SuggestedWhlslPrice {
            public Object get(ProductEOImpl obj) {
                return obj.getSuggestedWhlslPrice();
            }

            public void put(ProductEOImpl obj, Object value) {
                obj.setSuggestedWhlslPrice((Number) value);
            }
        }
        ,
        WhlslUnits {
            public Object get(ProductEOImpl obj) {
                return obj.getWhlslUnits();
            }

            public void put(ProductEOImpl obj, Object value) {
                obj.setWhlslUnits((String)value);
            }
        }
        ,
        CategoryId {
            public Object get(ProductEOImpl obj) {
                return obj.getCategoryId();
            }

            public void put(ProductEOImpl obj, Object value) {
                obj.setCategoryId((Integer)value);
            }
        }
        ,
        InventoryEO {
            public Object get(ProductEOImpl obj) {
                return obj.getInventoryEO();
            }

            public void put(ProductEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ItemEO {
            public Object get(ProductEOImpl obj) {
                return obj.getItemEO();
            }

            public void put(ProductEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ImageEO {
            public Object get(ProductEOImpl obj) {
                return obj.getImageEO();
            }

            public void put(ProductEOImpl obj, Object value) {
                obj.setImageEO((SummitEntityImpl) value);
            }
        }
        ,
        LongtextEO {
            public Object get(ProductEOImpl obj) {
                return obj.getLongtextEO();
            }

            public void put(ProductEOImpl obj, Object value) {
                obj.setLongtextEO((SummitEntityImpl) value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(ProductEOImpl object);

        public abstract void put(ProductEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int ID = AttributesEnum.Id.index();
    public static final int NAME = AttributesEnum.Name.index();
    public static final int SHORTDESC = AttributesEnum.ShortDesc.index();
    public static final int LONGTEXTID = AttributesEnum.LongtextId.index();
    public static final int IMAGEID = AttributesEnum.ImageId.index();
    public static final int SUGGESTEDWHLSLPRICE = AttributesEnum.SuggestedWhlslPrice.index();
    public static final int WHLSLUNITS = AttributesEnum.WhlslUnits.index();
    public static final int CATEGORYID = AttributesEnum.CategoryId.index();
    public static final int INVENTORYEO = AttributesEnum.InventoryEO.index();
    public static final int ITEMEO = AttributesEnum.ItemEO.index();
    public static final int IMAGEEO = AttributesEnum.ImageEO.index();
    public static final int LONGTEXTEO = AttributesEnum.LongtextEO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ProductEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("oracle.summit.model.entities.ProductEO");
    }

    /**
     * Gets the attribute value for Id, using the alias name Id.
     * @return the Id
     */
    public Number getId() {
        return (Number)getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Id.
     * @param value value to set the Id
     */
    public void setId(Number value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for Name, using the alias name Name.
     * @return the Name
     */
    public String getName() {
        return (String)getAttributeInternal(NAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for Name.
     * @param value value to set the Name
     */
    public void setName(String value) {
        setAttributeInternal(NAME, value);
    }

    /**
     * Gets the attribute value for ShortDesc, using the alias name ShortDesc.
     * @return the ShortDesc
     */
    public String getShortDesc() {
        return (String)getAttributeInternal(SHORTDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for ShortDesc.
     * @param value value to set the ShortDesc
     */
    public void setShortDesc(String value) {
        setAttributeInternal(SHORTDESC, value);
    }

    /**
     * Gets the attribute value for LongtextId, using the alias name LongtextId.
     * @return the LongtextId
     */
    public Number getLongtextId() {
        return (Number)getAttributeInternal(LONGTEXTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for LongtextId.
     * @param value value to set the LongtextId
     */
    public void setLongtextId(Number value) {
        setAttributeInternal(LONGTEXTID, value);
    }

    /**
     * Gets the attribute value for ImageId, using the alias name ImageId.
     * @return the ImageId
     */
    public Number getImageId() {
        return (Number)getAttributeInternal(IMAGEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ImageId.
     * @param value value to set the ImageId
     */
    public void setImageId(Number value) {
        setAttributeInternal(IMAGEID, value);
    }

    /**
     * Gets the attribute value for SuggestedWhlslPrice, using the alias name SuggestedWhlslPrice.
     * @return the SuggestedWhlslPrice
     */
    public Number getSuggestedWhlslPrice() {
        return (Number)getAttributeInternal(SUGGESTEDWHLSLPRICE);
    }

    /**
     * Sets <code>value</code> as the attribute value for SuggestedWhlslPrice.
     * @param value value to set the SuggestedWhlslPrice
     */
    public void setSuggestedWhlslPrice(Number value) {
        setAttributeInternal(SUGGESTEDWHLSLPRICE, value);
    }

    /**
     * Gets the attribute value for WhlslUnits, using the alias name WhlslUnits.
     * @return the WhlslUnits
     */
    public String getWhlslUnits() {
        return (String)getAttributeInternal(WHLSLUNITS);
    }

    /**
     * Sets <code>value</code> as the attribute value for WhlslUnits.
     * @param value value to set the WhlslUnits
     */
    public void setWhlslUnits(String value) {
        setAttributeInternal(WHLSLUNITS, value);
    }

    /**
     * Gets the attribute value for CategoryId, using the alias name CategoryId.
     * @return the value of CategoryId
     */
    public Integer getCategoryId() {
        return (Integer)getAttributeInternal(CATEGORYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CategoryId.
     * @param value value to set the CategoryId
     */
    public void setCategoryId(Integer value) {
        setAttributeInternal(CATEGORYID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getInventoryEO() {
        return (RowIterator)getAttributeInternal(INVENTORYEO);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getItemEO() {
        return (RowIterator)getAttributeInternal(ITEMEO);
    }

    /**
     * @return the associated entity oracle.summit.base.SummitEntityImpl.
     */
    public SummitEntityImpl getImageEO() {
        return (SummitEntityImpl)getAttributeInternal(IMAGEEO);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.summit.base.SummitEntityImpl.
     */
    public void setImageEO(SummitEntityImpl value) {
        setAttributeInternal(IMAGEEO, value);
    }

    /**
     * @return the associated entity oracle.summit.base.SummitEntityImpl.
     */
    public SummitEntityImpl getLongtextEO() {
        return (SummitEntityImpl)getAttributeInternal(LONGTEXTEO);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.summit.base.SummitEntityImpl.
     */
    public void setLongtextEO(SummitEntityImpl value) {
        setAttributeInternal(LONGTEXTEO, value);
    }

    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number id) {
        return new Key(new Object[]{id});
    }


}
